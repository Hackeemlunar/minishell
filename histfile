ls
touch src/execution/pipeline.c
ls
ls -R 
ls | grep src
make
ls | grep src
cd ...
ls
cat Makefile 
whoami
which shell
ls
ls | grep M
ls | grep M | cat | ls | printf
printf hello
hello
ls | grep M | cat | ls | printf
ls | grep M | cat | ls | printf || (printf hello)
ls | grep M | cat | ls | printf || (printf hello)
ls | grep M | cat | ls | printf | (printf hello)
ls | grep M | (echo)
ls | grep M | printf
ls
ls | grep M | printf
ls | grep M | echo
echo $(uname -r)
echo $(uname)
ls | grep M 
ls | grep M > t.txt | wc -l
ls | grep M > t.txt | wc -l
ls | grep M | wc -l
ls | grep M > t.txt | wc -l
ls -l | grep M > t.txt | wc -l
ls -l | grep M | wc -l
ls -l
ls -l | grep M
< cat t.txt 
ls || echo "nothing"
lsss || echo "nothing"
lsss || echo "nothing"
lsss || echo "nothing"
lsss || echo "nothing"
lsss || echo "nothing"
lsssss && echo "nothing"
lsssss && echo "nothing"
cat Makefile | S
cat Makefile | s
cat Makefile | grep CC
cat Makefile | grep
cat Makefile | grep successfully
cat Makefile | grep successfully
cat Makefile | grep successfully
cat Makefile | grep successfully
cat Makefile | grep s
cat Makefile | grep s | wc -l
cat Makefile | grep s | (wc -l)
git add .
lsssss && echo "nothing"
lsssss || echo "nothing"
make
lsssss || echo "nothing"
lsssss && echo "nothing"
lsssss && echo "nothing"
lsssss || echo "nothing"
make
lsssss || echo "nothing"
lsssss && echo "nothing"
lsssss && echo "nothing"
lsssss || echo "nothing"
cat Makefile | grep s | (wc -l)
git add .
echo 'Testing pipeline' | grep NonExistent && echo 'AND operation works!' || echo 'OR operation works!'
grep NonExistent && echo 'AND operation works!'
grep NonExistent && echo 'AND operation works!'
echo 'Testing pipeline' | grep NonExistent && echo 'AND operation works!' || echo 'OR operation works!'
cat Makefile | grep s | (wc -l)
grep NonExistent && echo 'AND operation works!'
echo 'AND operation works!' || echo 'OR operation works!'
greppp NonExistent && echo 'AND operation works!'
greppp NonExistent && echo 'AND operation works!'
echo 'AND operation works!' || echo 'OR operation works!'
echoo 'AND operation works!' || echo 'OR operation works!'
cat Makefile | grep s | (wc -l)
cat Makefile | grep s | (wc -l)
cat Makefile | grep s | wc -l
echoo 'AND operation works!' || echo 'OR operation works!'
greppp NonExistent && echo 'AND operation works!'
cat Makefile &
cat Makefile
cat Makefile &
gst
cat Makefile &
cat Makefile &
cat Makefile | grep s | wc -l &
cat Makefile | grep s | wc -l &
heloo
norm
norm src/execution/
heloo
norm src/execution/
heloo
cat Makefile | grep s | wc -l &
cat Makefile | grep s | wc -l
cat Makefile | grep s | wc -l
cat Makefile | grep s | wc -l
cat Makefile | grep s | wc -l
cat Makefile | grep s | wc -w
cat Makefile | grep 
cat Makefile | grep s | wc -w
< Makefile grep hello | echo
< Makefile grep s | echo
< Makefile grep s
< Makefile grep s | wc -l
< Makefile grep s > t.txt | wc -l
< Makefile grep s > t.txt | wc -l > t.txt | echo hello
norminette src/execution/
make
echo hello
which minishell
which sh
clear
git add .
ls
rm -rf pipex/
ls
git status
git add .
git status
git commit -m "Broke the pipe file into smaller units"
git push
clear
norminette src/execution/ &
h
(norminette src/execution/)
(norminette src/execution/) > t.txt 
echo hello"
echo "hello
clear
make
make re
make
make
< Makefile grep s > t.txt | wc -l > t.txt | echo hello
< Makefile grep s > t.txt | wc -l | echo hello
< Makefile grep s > t.txt | wc -l
< Makefile cat | wc -l
< Makefile cat | wc -l
< Makefile grep s > t.txt | wc -l
< Makefile cat | grep s > t.txt | wc -l
< Makefile cat | grep s | wc -l
make
make re
make re
< Makefile cat | grep s | wc -l
norminette src/execution/
norminette src/execution/logical_ops.c 
norminette src/execution/logical_ops.c 
norminette src/execution/logical_ops.c 
norminette src/execution/logical_ops.c 
norminette src/execution/exec_utils.c 
norminette src/execution/exec_utils.c 
norminette src/execution/exec_utils.c 
norminette src/execution/executor.h 
norminette src/execution/exit_status.c 
norminette src/execution/exit_status.c 
norminette src/execution/exit_status.c 
norminette src/execution/pipe_exec.c 
make
norminette src/execution/pipe_exec.c 
< Makefile cat | grep s | wc -l
< Makefile cat | grep s | wc -l > t.txt 
cat t.txt 
cat t.txt 
norminette src/execution/pipe_exec.c 
norminette src/execution/pipe_exec.c 
norminette src/execution/pipe_exec.c 
clear
norminette src/execution/pipe_exec.c
norminette src/execution/pipe_exec.c 
norminette src/execution/pipe_exec.c 
norminette src/execution/pipe_exec.c 
norminette src/execution/pipe_exec.c 
norminette src/execution/pipe_exec.c 
norminette src/execution/pipe_utils
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils.c 
norminette src/execution/pipe_utils1.c 
norminette src/execution/pipe_utils1.c 
norminette src/execution/pipe_utils1.c 
norminette src/execution/pipe_utils1.c 
norminette src/execution/pipe_utils1.c 
norminette src/execution/pipe_utils1.c 
norminette src/execution/pipe_utils1.c 
norminette src/execution/pipe_utils1.c 
norminette src/execution/pipe_utils2.c 
norminette src/execution/pipe_utils2.c 
norminette src/execution/pipe_utils2.c 
norminette src/execution/pipe_utils2.c 
norminette src/execution/run_command.c 
norminette src/execution/run_command.c 
make
norminette src/execution/run_command.c 
norminette src/execution/pipe_utils2.c 
cat t.txt 
< Makefile cat | grep s | wc -l
norminette src/execution/run_io.c 
norminette src/execution/run_io.c 
norminette src/execution/run_io.c 
norminette src/execution/run_io.c 
norminette src/execution/run_simple_cmd.c 
norminette src/execution/sub_var.c 
norminette src/execution/sub_var.c 
norminette src/execution/sub_var.c 
norminette src/execution/sub_var.c 
norminette src/execution/sub_var.c 
norminette src/execution/sub_var.c 
norminette src/execution/
norminette src/execution/
norminette src/execution/
norminette src/execution/expand_var.c 
norminette src/execution/expand_var.c 
norminette src/execution/expand_var.c 
norminette src/execution/expand_var.c 
norminette src/execution/expand_var.c 
norminette src/execution/expand_var.c 
norminette src/execution/
clear
norminette src/execution/
git add .
git commit -m "Normed all files in execution"
git push
catt t.txt || echo "couldnt open file"
catt t.txt && echo "couldnt open file"
cat t.txt && echo "couldnt open file"
cat t.txt || echo "couldnt open file"
clear
cat t.txt || echo "couldnt open file"
cat t.txt && echo "couldnt open file"
cat tt.txt && echo "couldnt open file"
cat tt.txt | grep 1 && echo "couldnt open file"
cat t.txt | grepp 1 && echo "couldnt open file"
make
cat t.txt | grepp 1 && echo "couldnt open file"
cat tt.txt && echo "couldnt open file"
make
cat tt.txt && echo "couldnt open file"
make
cat tt.txt && echo "couldnt open file"
cd ..
ls
pwd
git log
log
pwd
cd ..
ls
pwd
env
pwd
cd ..
pwd
cat << EOF
cat << EOF
pwd
cd ..
pwd
cd minishell
ls
ls
pwd
ls
pwd
ls
pwd
ls
pwd
ls
pwd
env
echo $VAR
echo PATH
echo $PATH
echo $SHELL
$SHELL
ls
pw
pwd
cat 
cat 
cat << EOF
cat << EOF
cat 
ls
cat << EOF
cat << EOF
cat << EOF
cat << EOF
cat << EOF
cat << EOF
cat << EOF
cat
cat << EOF
cat << EOF
cat << EOF
l
ls
pwd
env
cat << EOF
ls
cat 
cat << EOF
ls
cat 
cat << EOF 
cat 
cat 
cat << EOF
ls
cat << EOF
cat << EOF
cat << EOF
cat << EOF
cat << EOF 
cat 
cat 
cat < EOF
cat << EOF
cat << EOF
ls
pwd
cat 
cat << EOF
cat
cat 
cat << EOF
cat << EOF
cat 
cat << EOF
cat << EOF
cat << EOF
cat << EOF
cat << EOF
ls
cat
cat << EOF
cat 
cat << EOF
cat << EOF
ls
cat 
cat << EOF
ls
pwd
cat 
cat << EOF
cat << EOF
cat << EOF 
cat << EOF 
cat << EOF 
cat << EOF 
ls
pwd
cat 
cat << EOF 
ls
env
pwd
env
echo jds
echo -n jds
cat 
cat 
ls
ls
pwd
cat 
cat << EOF
ls
cat 
cat << EOF
sjv
svhs
cat 
cat << EOF
cat
cat << EOF
cat << EOF
cat << EOF
cat << EOF
cat << EOF
cat 
cat 
cat << EOF
cat << EOF
cat << EOF
cat << EOF
cat << EOF
l
ls
cat 
cat << EOF
cat << EOF
cat 
cat << EOF
cat << EOF
ls
cat 
cat 
cat < EOF
cat << EOF
ls
pwd
cat << EOF
cat 
cat 
cat 
cat
cat
cat << EOF
cat
cat
cat << EOF
cat << EOF
cat << EOF
cat << EOF
cat
cat
cat << EOF
cat 
ls
pwd
cat << EOF
cat << EOF
cat 
cat 
cat
cat << EOF
ls
pwd
cat 
cat 
cat << EOF
cat 
cat  << EOF
l
cat 
cat << EOF
cat hello
cat
echo hi
echo hi $?
./minishell 
cat << EOF
helloooo
hi
what is this
./minishell 
cat << EOF
unzip
ls *.c
ls *
ls *
ls *.c
ls *.c
ls *libf
clear
ls *libf
make
ls *libf
ls libf*
bash
ls libf*
ls lib*
ls *lib
bash
ip
ip -a
ip route
ls *lib
bash
ls *lib
make
ls *lib
ls *lib
ls lib*
ls *ib*
bash
ls *ib*
ls lib*
ls *lib
bash 
ls *lib*
ls *ib*
make
ls *ib*
ls *ib
bash
ls *lib
ls *lib*
bash
make
./minishell 
./minishell 
bash
cat << ok
ls
clear
h
./minishell 
clear
hello
hi
k
j
cat << ok | grep h
env
bash
export
bash
env
export h=hello
echo $?
echo $h
export h=hellooooooo
echo $h
export h=kkkkkkkkkkkkkkkkkkkkk
echo $h
env
git add .
git commit -m "export issues"
git push
echo
echo hello
echo hello all
echo hello
echo hello
echo hello all
echo -n hello all
echo -nn hello all
bash
echo -nn hello all
echo -nn hello all
bash
echo hello all -n
echo hello all -n > t.txt
l
ls
make
echo hello everyone
echo hello everyone
echo hello everyone -n
echo -n hello everyone
echo -n hello everyone > t
cat t
<< ok echo hello world
echo hey
hi
hey
echo hey
echo hello world
make
echo hello world
echo hello world > t 
cat t
echo hello world > t 
make
echo hello world > t 
cat t
echo -n hello world > t 
cat t
echo -n hello world
echo hello world
cat t
echo hello world
cat t
echo hello world
echo hello world
echo -n hello world
echo hello world
clear
export hello
echo $hello
export hello
echo $hello
env
export hello
env
echo $hello
echo $h
echo $
export this="./"
ls $this
env
echo $s
ls $s
export k
echo $k
env
ls src $s obj
export z
env
export k
env
env
export k
env
export k=
env
make
